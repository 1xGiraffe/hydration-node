[package]
name = "hydradx-adapters"
version = "0.4.0"
description = "Structs and other generic types for building runtimes."
authors = ["GalacticCouncil"]
edition = "2021"
license = "Apache 2.0"
repository = "https://github.com/galacticcouncil/warehouse/tree/master/adapters"

[dependencies]
codec = { default-features = false, features = ["derive"], package = "parity-scale-codec", version = "3.4.0" }
log = { version = "0.4.17", default-features = false }

# HydraDX dependencies
primitives = { workspace = true }
hydradx-traits = { workspace = true }
hydra-dx-math = { workspace = true }
pallet-transaction-multi-payment = { workspace = true }
pallet-omnipool = { workspace = true }
pallet-ema-oracle = { workspace = true }
pallet-circuit-breaker = { workspace = true }
warehouse-liquidity-mining = { workspace = true }
pallet-omnipool-liquidity-mining = { workspace = true }
pallet-dynamic-fees = { workspace = true }

# Substrate dependencies
frame-support = { workspace = true }
frame-system = { workspace = true }
sp-runtime = { workspace = true }
sp-std = { workspace = true }
primitive-types = { workspace = true }

# Polkadot dependencies
polkadot-parachain = { workspace = true }
polkadot-xcm = { workspace = true }
xcm-builder = { workspace = true }
xcm-executor = { workspace = true }

# Cumulus dependencies
cumulus-pallet-parachain-system = { workspace = true }
cumulus-primitives-core = { workspace = true }

# ORML dependencies
orml-xcm-support = { workspace = true }
orml-traits = { workspace = true }

[dev-dependencies]
lazy_static = { features = ["spin_no_std"], version = "1.4.0" }

[features]
default = ["std"]
runtime-benchmarks = [
    "xcm-builder/runtime-benchmarks",
    "xcm-executor/runtime-benchmarks",
]
std = [
    "codec/std",
    "frame-support/std",
    "frame-system/std",
    "hydradx-traits/std",
    "pallet-transaction-multi-payment/std",
    "polkadot-xcm/std",
    "sp-runtime/std",
    "sp-std/std",
    "xcm-builder/std",
    "xcm-executor/std",
    "cumulus-pallet-parachain-system/std",
    "polkadot-parachain/std",
]
