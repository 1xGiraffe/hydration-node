name: build-and-deploy
#${GITHUB_REF##*/}
on:
  push:

jobs:
  pop-runner-instance:
    name: create and setup infrastructure for branch
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      EC2_SECRET: ${{ secrets.EC2_PWD }}
      S3_BACKEND_KEY_NAME: tf-state-${{ github.actor }}
    steps:
      - name: checkout code
        uses: actions/checkout@v2.1.0
      - name: setup node  
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.12.25
      #- name: Declare some variables
       # id: vars
        #shell: bash
        #run: |
         # echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          #echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"    
      - name: rewrite tf state key
        id: tf-state-key
        working-directory: ./infrastructure
        run: sed -i 's/BRANCH_ACTOR_KEY/${{ github.ref }}/g' infra.tf
      - name: Terraform Init
        id: init
        working-directory: ./infrastructure
        run: terraform init
        continue-on-error: false
      
      - name: Terraform plan
        id: plan
        working-directory: ./infrastructure
        run: terraform plan -var="ec2_pwd=$EC2_SECRET" -var="branch_name=${{ github.actor }}"
        continue-on-error: false  
      - name: Terraform apply
        id: apply
        working-directory: ./infrastructure
        run: terraform apply -var="ec2_pwd=$EC2_SECRET" -var="branch_name=${{ github.actor }}" -auto-approve
        continue-on-error: false
      - name: Sleep for 10 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '10s'
  
  
  destroy-runner-instance:
    name: destroy infra
    runs-on: ubuntu-latest
    needs: pop-runner-instance
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      EC2_SECRET: ${{ secrets.EC2_PWD }}
    steps:
      - name: checkout code
        uses: actions/checkout@v2.1.0
      - name: setup node  
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.12.25

      - name: Terraform workspace
        id: workspace
        working-directory: ./infrastructure
        run: terraform workspace select aws-runner #variabilize
        continue-on-error: false   
      - name: Terraform apply
        id: apply
        working-directory: ./infrastructure
        run: terraform destroy -auto-approve
        continue-on-error: false
